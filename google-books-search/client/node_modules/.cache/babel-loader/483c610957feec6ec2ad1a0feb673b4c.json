{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teall\\\\dev\\\\uwbc\\\\homework\\\\Google-Books-Search\\\\google-books-search\\\\client\\\\src\\\\pages\\\\Books.js\";\nimport React, { useState } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\"; // import DeleteBtn from \"../components/DeleteBtn\";\n\nimport API from \"../utils/API\";\nimport { Container } from \"../components/Grid\";\nimport Axios from \"axios\";\n\nfunction Books() {\n  const [book, setBook] = useState(\"\");\n  const [result, setResult] = useState([]);\n  const [apiKey, setApiKey] = useState(\"AIzaSyAKXbxvGaBZjkgngiHBcpmtuNtiwdpnzWI\");\n\n  function handleChange(event) {\n    const book = event.target.value;\n    setBook(book);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(book);\n    Axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + book + \"&key=\" + apiKey + \"&maxResults=10\").then(data => {\n      console.log(data.data.items);\n      setResult(data.data.items);\n    });\n  }\n\n  function handleSaveBook(index) {\n    // event.preventDefault();\n    // const book = result.filter(book => result.id);\n    console.log(result[index].volumeInfo.title);\n    API.saveBook({\n      title: result[index].volumeInfo.title,\n      authors: result[index].volumeInfo.authors,\n      description: result[index].volumeInfo.description,\n      image: result[index].volumeInfo.imageLinks.thumbnail,\n      link: result[index].volumeInfo.previewLink\n    }) // console.log(\"What's up?\")\n    .then(res => alert(\"Book Saved!\")).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"What Books Should I Read?\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleChange,\n    className: \"form-control mt-10\",\n    placeholder: \"Search for Books\",\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Search\")), result.map((book, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: book.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: book.volumeInfo.previewLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, book.volumeInfo.title)), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, book.volumeInfo.authors), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, book.volumeInfo.description), /*#__PURE__*/React.createElement(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: book.volumeInfo.imageLinks.thumbnail,\n    alt: book.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success\",\n    onClick: () => handleSaveBook(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"  Save\")))));\n}\n\nexport default Books;","map":{"version":3,"sources":["C:/Users/teall/dev/uwbc/homework/Google-Books-Search/google-books-search/client/src/pages/Books.js"],"names":["React","useState","Jumbotron","API","Container","Axios","Books","book","setBook","result","setResult","apiKey","setApiKey","handleChange","event","target","value","handleSubmit","preventDefault","console","log","get","then","data","items","handleSaveBook","index","volumeInfo","title","saveBook","authors","description","image","imageLinks","thumbnail","link","previewLink","res","alert","catch","err","map","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n// import DeleteBtn from \"../components/DeleteBtn\";\r\nimport API from \"../utils/API\";\r\nimport { Container } from \"../components/Grid\";\r\nimport Axios from \"axios\";\r\n\r\nfunction Books() {\r\n  const [book, setBook] = useState(\"\");\r\n  const [result, setResult] = useState([]);\r\n  const [apiKey, setApiKey] = useState(\"AIzaSyAKXbxvGaBZjkgngiHBcpmtuNtiwdpnzWI\");\r\n\r\n\r\n  function handleChange(event) {\r\n    const book = event.target.value;\r\n    setBook(book);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    console.log(book);\r\n    Axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + book + \"&key=\" + apiKey + \"&maxResults=10\")\r\n      .then(data => {\r\n        console.log(data.data.items);\r\n        setResult(data.data.items);\r\n      })\r\n  }\r\n\r\n  function handleSaveBook(index) {\r\n    // event.preventDefault();\r\n\r\n    // const book = result.filter(book => result.id);\r\n    console.log(result[index].volumeInfo.title);\r\n\r\n    API.saveBook({\r\n      title: result[index].volumeInfo.title,\r\n      authors: result[index].volumeInfo.authors,\r\n      description: result[index].volumeInfo.description,\r\n      image: result[index].volumeInfo.imageLinks.thumbnail,\r\n      link: result[index].volumeInfo.previewLink\r\n    })\r\n    // console.log(\"What's up?\")\r\n      .then(res => alert(\"Book Saved!\"))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Container fluid>\r\n      {/* <Row> */}\r\n      {/* <Col size=\"md-6\"> */}\r\n      <Jumbotron>\r\n        <h1>What Books Should I Read?</h1>\r\n      </Jumbotron>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" onChange={handleChange} className=\"form-control mt-10\" placeholder=\"Search for Books\" autoComplete=\"off\" />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-success\" >Search</button>\r\n      </form>\r\n      {result.map((book, index) => (\r\n        <div key={book.id}>\r\n          <a href={book.volumeInfo.previewLink}>\r\n            <h3>{book.volumeInfo.title}</h3></a>\r\n          <h4>{book.volumeInfo.authors}</h4>\r\n          <p>{book.volumeInfo.description}</p>\r\n          <a>\r\n            {/* <a target=\"_blank\" href={book.volumeInfo.previewLink}> */}\r\n            <img src={book.volumeInfo.imageLinks.thumbnail} alt={book.title} />\r\n            {/* <a href={book.volumeInfo.previewLink}>  {book.volumeInfo.title}  </a> */}\r\n            <button type=\"submit\" className=\"btn btn-success\" onClick={() => handleSaveBook(index)}>  Save</button>\r\n\r\n          </a>\r\n        </div>\r\n      )\r\n\r\n\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\n\r\nexport default Books;\r\n"]},"metadata":{},"sourceType":"module"}